#include <iostream>

class Pila {
private:
    struct Nodo {
        int dato;
        Nodo* siguiente;
    };

    Nodo* cima;

public:
    Pila() : cima(nullptr) {}

    ~Pila() {
        while (cima != nullptr) {
            pop();
        }
    }

    void push(int valor) {
        Nodo* nuevoNodo = new Nodo;
        nuevoNodo->dato = valor;
        nuevoNodo->siguiente = cima;
        cima = nuevoNodo;
    }

    void pop() {
        if (cima != nullptr) {
            Nodo* temp = cima;
            cima = cima->siguiente;
            delete temp;
        } else {
            std::cout << "La pila estÃ¡ vacÃ­a." << std::endl;
        }
    }

    void imprimir() {
        Nodo* actual = cima;
        while (actual != nullptr) {
            std::cout << actual->dato << " ";
            actual = actual->siguiente;
        }
        std::cout << std::endl;
    }
};

int main() {
    Pila pila;
    
    std::cout << "Colocando 3 elementos a la pila: 5, 10, 15" << std::endl;
    pila.push(5);
    pila.push(10);
    pila.push(15);
    pila.imprimir();
    
    std::cout << "Sacando un elemento de la pila" << std::endl;
    pila.pop();
    pila.imprimir();
    
    std::cout << "Colocando 2 elementos mas a la pila: 20, 25" << std::endl;
    pila.push(20);
    pila.push(25);
    pila.imprimir();
    
    std::cout << "Sacando dos elementos de la pila" << std::endl;
    pila.pop();
    pila.pop();
    pila.imprimir();
    
    return 0;
}
